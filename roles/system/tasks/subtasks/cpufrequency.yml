#########################################################################
# Title:         Cloudbox: System | CPU Frequency Tasks                 #
# Author(s):     l3uddz, EnorMOZ, desimaniac                            #
# URL:           https://github.com/cloudbox2/cloudbox                  #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: CPU Frequency | Install 'cpufrequtils'
  apt:
    name: cpufrequtils
    state: present

- name: CPU Frequency | Install 'linux-tools' for Ubuntu
  apt:
    state: present
    name:
      - linux-tools-common
      - linux-tools-generic
  when: ansible_distribution == 'Ubuntu'

- name: CPU Frequency | Install 'linux-tools' for Debian
  apt:
    name: linux-tools
    state: present
  when: ansible_distribution == 'Debian'

- name: "CPU Frequency | Install 'linux-tools-{{ ansible_kernel }}'"
  shell: "apt-get install -qq $(apt-cache search -n linux-tools-{{ ansible_kernel }} | awk '{print $1}' | tail -n 1)"
  args:
    warn: false
  ignore_errors: true

- name: CPU Frequency | Ensure 'cpufrequtils' is enabled
  ini_file:
    path: "/etc/default/cpufrequtils"
    section: null
    option: 'ENABLE'
    value: '"true"'
    state: present
    create: true
    mode: '0644'
    no_extra_spaces: true

- name: CPU Frequency | Set 'GOVERNOR' to performance
  ini_file:
    path: "/etc/default/cpufrequtils"
    section: null
    option: 'GOVERNOR'
    value: '"performance"'
    state: present
    create: true
    mode: '0644'
    no_extra_spaces: true

- name: CPU Frequency | Remove mispelled 'GOVENOR' entry
  ini_file:
    path: "/etc/default/cpufrequtils"
    section: null
    option: 'GOVENOR'
    mode: '0644'
    state: absent

- name: Populate Service Facts
  service_facts:

- name: Remove ondemand | Stop and disable 'ondemand.service'
  systemd:
    name: ondemand
    state: stopped
    enabled: false
    daemon_reload: true
  ignore_errors: true
  when: "services['ondemand.service']['status'] == 'enabled'"
