#########################################################################
# Title:         Cloudbox: Cloudplow Role                               #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Remove legacy service
  include_tasks: "{{ playbook_dir }}/resources/tasks/systemd/delete_service.yml"
  vars:
    _service_name: unionfs_cleaner

- name: Stop Service
  include_tasks: "{{ playbook_dir }}/resources/tasks/systemd/stop_service.yml"
  vars:
    _service_name: cloudplow

- name: Update Service Credentials
  include_tasks: "{{ playbook_dir }}/resources/tasks/systemd/update_service_credentials.yml"
  vars:
    _service_name: cloudplow

- name: Create directory
  file: "path={{ folder_path }} state=directory owner={{ user.name }} group={{ user.name }} mode=0775 recurse=yes"

- name: Clone git repo
  include_tasks: "{{ playbook_dir }}/resources/tasks/git/clone_git_repo.yml"
  vars:
    _git_repo_url: "{{ git_repo_url }}"
    _git_repo_dest: "{{ git_repo_dest }}"

- name: Install pip requirements
  pip:
    requirements: "{{ requirements_path }}"
    executable: "{{ pip_executable }}"

- name: Set script as executable
  file:
    path: "{{ script_path }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: a+x

- name: Create script alias
  file:
    src: "{{ script_path }}"
    dest: "{{ alias_path }}"
    state: link

- name: Import Settings Task
  import_tasks: "subtasks/settings.yml"

- name:  Services | Import '{{ service_file }}'
  template:
    src: cloudplow.service.j2
    dest: "{{ service_path }}"
    force: no

- name: Start service
  systemd:
    name: "{{ service_name }}"
    state: started
    enabled: yes
    daemon_reload: yes
