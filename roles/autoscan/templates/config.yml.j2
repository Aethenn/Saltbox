# <- processor ->

# Override the minimum age before a scan request is sent to the target (Default 10m):
minimum-age: 10m

# Override the delay between processed scans (Default 5s):
scan-delay: 5s

# Set anchor files for remote storage. If these are missing no scans will be sent to the target to avoid files being trashed when a mount fails
anchors:
  - /mnt/unionfs/mounted.bin

# <- triggers ->

# Optionally, protect your webhooks with authentication
authentication:
  username: {{ user.name }}
  password: {{ user.pass }}

# Port for Autoscan webhooks to listen on
port: 3030

triggers:
  # bernard:
  #   - account: /config/sa.json # Path inside the container where your SA is located
  #     cron: "*/5 * * * *" # every five minutes (the "" are important)
  #     priority: 0
  #     drives:
  #       - id: drive_id #Friendly title
        
  #     # Rewrite gdrive to the local filesystem
  #     rewrite:
  #       - from: ^/Media/
  #         to: /mnt/unionfs/Media/

  #     # Filter with regular expressions
  #     include:
  #       - ^/mnt/unionfs/Media/
  #     exclude:
  #       - '\.srt$'

  inotify:
    - priority: 0

      # Filter with regular expressions
      include:
        - ^/mnt/unionfs/Media/
      exclude:
        - '\.(srt|pdf)$'

      # rewrite inotify path to unified filesystem
      rewrite:
        - from: ^/mnt/local/Media/
          to: /mnt/unionfs/Media/

      # Local filesystem paths to monitor
      paths:
        - path: /mnt/local/Media

  sonarr:
    - name: sonarr # /triggers/sonarr
      priority: 2
      rewrite:
        - from: /tv/
          to: /data/TV/

  radarr:
    - name: radarr # /triggers/radarr
      priority: 2
      rewrite:
        - from: /movies/
          to: /data/Movies/

  lidarr:
    - name: lidarr # /triggers/lidarr
      priority: 1
      rewrite:
        - from: /music/
          to: /data/Music/

# <- targets ->

targets:
{% if plex_tokens is defined and (plex_tokens | length > 0) and plex_account_is_enabled %}
  plex:
{% for key, value in _plex_instances.items() if plex_tokens is defined and (plex_tokens | length > 0) %}
    - url: {{ value }} # {{ key }}
      token: {{ plex_tokens[loop.index0] }} 
{% endfor %}
{% endif %}
