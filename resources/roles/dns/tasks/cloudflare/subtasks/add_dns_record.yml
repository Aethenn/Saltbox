#########################################################################
# Title:         Saltbox: DNS | Cloudflare | Add DNS Record             #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Cloudflare | Add DNS Record | Find pip3 path
  ansible.builtin.find:
    paths: "{{ cloudflare_path }}/venv"
    recurse: true
    patterns: 'pip3'
  register: files

- name: Cloudflare | Add DNS Record | Path
  ansible.builtin.set_fact:
    cloudflare_bin_folder: "{{ files.files[0].path | dirname }}"

- name: Cloudflare | Add DNS Record | Fetch Record information
  ansible.builtin.shell: "{{ cloudflare_bin_folder }}/python3 {{ cloudflare_script_path }} --auth_key '{{ cloudflare.api }}' --auth_email '{{ cloudflare.email }}' --zone_name '{{ dns_zone }}' --record '{{ dns_record }}.{{ dns_zone }}'"
  register: cloudflare_record
  ignore_errors: true

- name: Cloudflare | Add DNS Record | Print Failure Output
  ansible.builtin.fail:
    msg: "{{ cloudflare_record.stderr }}"
  when: cloudflare_record.rc != 0

- name: Cloudflare | Add DNS Record | Convert JSON to Dictionary
  ansible.builtin.set_fact:
    cloudflare_record_dict: "{{ cloudflare_record.stdout | from_json }}"

- name: Cloudflare | Add DNS Record | Remove DNS CNAME Record
  community.general.cloudflare_dns:
    account_api_token: "{{ cloudflare.api }}"
    account_email: "{{ cloudflare.email }}"
    zone: "{{ dns_zone }}"
    state: absent
    type: CNAME
    record: "{{ dns_record }}"
  register: cloudflare_dns_record_removal_status
  when: item.type == 'CNAME'
  loop: "{{ cloudflare_record_dict }}"
  loop_control:
    label: "{{ item.name }} - {{ item.type }}"

- name: Cloudflare | Add DNS Record | Tasks on success
  when: cloudflare_dns_record_removal_status is succeeded and cloudflare_dns_record_removal_status.changed
  block:
    - name: Cloudflare | Add DNS Record | Set 'dns_record_print' variable
      ansible.builtin.set_fact:
        dns_record_print: "{{ (dns_record == dns_zone) | ternary(dns_zone, dns_record + '.' + dns_zone) }}"

    - name: Cloudflare | Add DNS Record | Display DNS CNAME Record removal status
      ansible.builtin.debug:
        msg: "DNS CNAME Record for '{{ dns_record_print }}' was removed."

- name: Cloudflare | Add DNS Record | Initialize 'cloudflare_ipv4_record' and cloudflare_ipv6_record variables
  ansible.builtin.set_fact:
    cloudflare_ipv4_record: []
    cloudflare_ipv6_record: []

- name: Cloudflare | Add DNS Record | Set 'cloudflare_ipv4_record' variable
  ansible.builtin.set_fact:
    cloudflare_ipv4_record: "{{ item }}"
  when: item.type == 'A'
  loop: "{{ cloudflare_record_dict }}"
  loop_control:
    label: "{{ item.name }} - {{ item.type }}"

- name: Cloudflare | Add DNS Record | Set 'cloudflare_ipv6_record' variable
  ansible.builtin.set_fact:
    cloudflare_ipv6_record: "{{ item }}"
  when: item.type == 'AAAA'
  loop: "{{ cloudflare_record_dict }}"
  loop_control:
    label: "{{ item.name }} - {{ item.type }}"

- name: Cloudflare | Add DNS Record | IPv4 Tasks
  ansible.builtin.include_tasks: "add_dns_record/ipv4_enabled.yml"
  when: dns.ipv4 and ((not ((cloudflare_ipv4_record is defined and (cloudflare_ipv4_record | length > 0)) and (cloudflare_ipv4_record.content == ip_address_public))) or not (cloudflare_ipv4_record is defined and (cloudflare_ipv4_record | length > 0)))

- name: Cloudflare | Add DNS Record | IPv4 Disable Tasks
  ansible.builtin.include_tasks: "add_dns_record/ipv4_disabled.yml"
  when: (not dns.ipv4) and (cloudflare_ipv4_record is defined and (cloudflare_ipv4_record | length > 0))

- name: Cloudflare | Add DNS Record | IPv6 Enabled Block
  ansible.builtin.include_tasks: "add_dns_record/ipv6_enabled.yml"
  when: dns.ipv6 and ((not ((cloudflare_ipv6_record is defined and (cloudflare_ipv6_record | length > 0)) and (cloudflare_ipv6_record.content == ipv6_address_public))) or not (cloudflare_ipv6_record is defined and (cloudflare_ipv6_record | length > 0)))

- name: Cloudflare | Add DNS Record | IPv6 Disable Block
  ansible.builtin.include_tasks: "add_dns_record/ipv6_disabled.yml"
  when: (not dns.ipv6) and (cloudflare_ipv6_record is defined and (cloudflare_ipv6_record | length > 0))
