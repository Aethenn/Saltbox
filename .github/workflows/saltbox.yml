name: CI

on:
  push:
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'
      - 'roles/backup/**'
      - 'roles/restore/**'
      - 'roles/settings/**'
      - 'roles/nvidia/**'
      - 'roles/plex_extra_tasks/**'
      - 'roles/plex_auth_token/**'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'
      - 'roles/backup/**'
      - 'roles/restore/**'
      - 'roles/settings/**'
      - 'roles/nvidia/**'
      - 'roles/plex_extra_tasks/**'
      - 'roles/plex_auth_token/**'
  workflow_dispatch:

jobs:
  ansible-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Lint Ansible Playbook
      uses: ansible/ansible-lint-action@main

  add-contributors:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2

    - uses: BobAnkh/add-contributors@master
      with:
        REPO_NAME: 'saltyorg/Saltbox'
        CONTRIBUTOR: '### Contributors'
        COLUMN_PER_ROW: '6'
        ACCESS_TOKEN: ${{secrets.GITHUB_TOKEN}}
        IMG_WIDTH: '100'
        FONT_SIZE: '14'
        PATH: '/README.md'
        COMMIT_MESSAGE: 'docs(README): update contributors'
        AVATAR_SHAPE: 'square'

  install:
    name: '${{ matrix.roles }}-${{ matrix.release }}'
    runs-on: ${{ matrix.release }}
    needs: ansible-lint
    strategy:
      matrix:
        roles:
          - saltbox
          - feederbox
          - mediabox
          - media-server
          - tautulli
          - overseerr
          - portainer
          - organizr
          - cloudplow
          - nzbget
          - rutorrent
          - jackett
          - nzbhydra2
          - sonarr
          - radarr
          - lidarr
          - iperf3
          - nethogs
          - glances
          - btop
          - asshama
          - autoheal
          - autoscan
          - bazarr
          - btrfsmaintenance
          - ddclient
          - deluge
          - emby
          - jellyfin
          - mainline
          - netdata
          - nginx
          - nzbthrottle
          - petio
          - plex
          - prowlarr
          - qbittorrent
          - readarr
          - sabnzbd
          - subliminal
          - trackarr
          - traktarr
          - transfer
          - yyq
        release:
          - ubuntu-20.04
          - ubuntu-22.04
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: curl https://raw.githubusercontent.com/saltyorg/sb/master/sb_dep.sh --output sb_dep.sh && sudo bash sb_dep.sh -v
        
      - name: Create /srv/git
        run: sudo mkdir /srv/git

      - name: Symlink cloned repository to /srv/git/saltbox
        run: sudo ln -s $GITHUB_WORKSPACE /srv/git/saltbox

      - name: Chown /srv/git
        run: sudo chown -R runner:runner /srv/git

      - name: Import default configuration
        run: for i in defaults/*; do cp -n $i "$(basename "${i%.*}")"; done

      - name: Edit accounts.yml
        run: sed -i 's/seed/runner/g' accounts.yml

      - name: Run Tree
        run: tree -a

      - name: Syntax Check
        run: sudo ansible-playbook saltbox.yml --syntax-check

      - name: Install Saltbox Core
        run: sudo ansible-playbook saltbox.yml --tags "core" --skip-tags "settings" --extra-vars '{"continuous_integration":true}'
        if: ${{ !(contains(matrix.roles, 'saltbox') || contains(matrix.roles, 'feederbox') || contains(matrix.roles, 'mediabox')) }}

      - name: Install ${{ matrix.roles }}
        run: sudo ansible-playbook saltbox.yml --tags "${{ matrix.roles }}" --skip-tags "settings" --extra-vars '{"continuous_integration":true}'

  webhook:
    name: 'webhook'
    runs-on: self-hosted
    needs: install
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
